<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangchenle.electricityconsumptionsystem.dao.PaymentRecordDao">
    <resultMap id="PaymentRecord" type="com.yangchenle.electricityconsumptionsystem.entity.PaymentRecordEntity">
        <result column="PaymentId" property="paymentId"/>
        <result column="ElectricId" property="electricId"/>
        <result column="PaymentMethod" property="paymentMethod"/>
        <result column="Money" property="money"/>
        <result column="PaymentState" property="paymentState"/>
        <result column="AddTime" property="addTime"/>
        <result column="UpdateTime" property="updateTime"/>
    </resultMap>

    <sql id="allFile">
        PaymentId,
        ElectricId,
        PaymentMethod,
        Money,
        PaymentState,
        AddTime,
        UpdateTime
    </sql>

    <select id="queryPayment" parameterType="map" resultMap="PaymentRecord">
        SELECT
        <include refid="allFile"/>
        FROM payment_record
        WHERE ElectricId = #{electricId }
        AND PaymentState = #{paymentState }
    </select>

    <update id="updatePayment" parameterType="map">
        UPDATE payment_record
        SET
        PaymentMethod = #{paymentMethod },
        Money = #{money },
        PaymentState = #{paymentState },
        UpdateTime = NOW()
        WHERE
        ElectricId = #{electricId }
    </update>

    <select id="selectPayRecordAll" parameterType="map" resultMap="PaymentRecord">
        SELECT
        <include refid="allFile"/>
        FROM payment_record
        where PaymentState = #{state}
        <if test="electricId!=null">
            ElctricId=#{electricId}
        </if>
        <if test="start!=null">
            and addTime &gt;= #{start}
        </if>
        <if test="end!=null">
            and AddTime &lt;= #{end}
        </if>
    </select>

    <insert id="insertRecord" parameterType="map" useGeneratedKeys="true" keyProperty="payRecord.paymentId">
        INSERT INTO payment_record
        (ElectricId, PaymentMethod, Money, PaymentState, AddTime, UpdateTime)
        VALUES (
        #{payRecord.electricId },
        #{payRecord.paymentMethod },
        #{payRecord.money },
        #{payRecord.paymentState },
        NOW(),
        NOW()
        )
    </insert>

    <delete id="deleteById" parameterType="map">
        DELETE FROM
        electric
        WHERE ElectricId = #{electricId }
    </delete>
</mapper>